<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>浮生轩</title>
  
  <subtitle>自古人生何其乐,偷得浮生半日闲</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://langya1945.xyz/"/>
  <updated>2018-08-21T02:04:45.984Z</updated>
  <id>https://langya1945.xyz/</id>
  
  <author>
    <name>LangYa1945</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux目录管理</title>
    <link href="https://langya1945.xyz/post/dd43b6cd.html"/>
    <id>https://langya1945.xyz/post/dd43b6cd.html</id>
    <published>2018-08-21T10:04:04.000Z</published>
    <updated>2018-08-21T02:04:45.984Z</updated>
    
    <content type="html"><![CDATA[<h3 id="目录表示"><a href="#目录表示" class="headerlink" title="目录表示"></a>目录表示</h3><ul><li>.代表此层目录</li><li>..代表上层目录</li><li>-代表前一个工作目录</li><li>~目前使用者的主目录</li><li>~account代表 account 这个使用者的主文件<h4 id="目录命令"><a href="#目录命令" class="headerlink" title="目录命令"></a>目录命令</h4></li><li>cd：变换目录</li><li>pwd：显示目前的目录</li><li>mkdir：创建一个新的目录</li><li>rmdir：删除一个空的目录：rmdir 仅能删除空目录，要删除非空目录需使用“ rm -r ”指令<h4 id="cd-change-dictionary"><a href="#cd-change-dictionary" class="headerlink" title="cd: change dictionary."></a>cd: change dictionary.</h4></li><li>cd ~：示回到自己的主文件夹</li><li>cd :没有加上任何路径，也还是代表回到自己主文件夹.</li><li>cd ~langya1945:代表去到 langya1945 这个使用者的主文件夹</li><li>cd -:表示回到刚刚的那个目录.<h4 id="pwd-print-working-directory"><a href="#pwd-print-working-directory" class="headerlink" title="pwd :print working directory"></a>pwd :print working directory</h4></li><li>没什么好说的<h4 id="mkdir：make-dictionary"><a href="#mkdir：make-dictionary" class="headerlink" title="mkdir：make dictionary"></a>mkdir：make dictionary</h4></li><li>mkdir -m:强制设置文件权限<br>mkdir -m 711 test1:给与test1文件夹drwx–x–x的权限</li><li>mkdir -p:创造迭代目录：</li></ul><p><strong> # Create a directory and all its parents<br>mkdir -p foo/bar/baz</strong># Create foo/bar and foo/baz directories<br>mkdir -p foo/{bar,baz}<br>** # Create the foo/bar, foo/baz, foo/baz/zip and foo/baz/zap directories<br>mkdir -p foo/{bar,baz/{zip,zap}}</p><p>####rm:remove dictionary<br><strong># Remove files and subdirs<br>rm -rf path/to/the/target/</strong># Ignore non existent files<br>rm -f path/to/the/target<br>**# Remove a file with his inode<br>find /tmp/ -inum 6666 -exec rm -i ‘{}’ \;</p><h4 id="rmdir"><a href="#rmdir" class="headerlink" title="rmdir"></a>rmdir</h4><p>-p:连同上层、空的文件夹一起删</p><h4 id="ls：文件与目录的检视"><a href="#ls：文件与目录的检视" class="headerlink" title="ls：文件与目录的检视"></a>ls：文件与目录的检视</h4><p>-l:列出所有文件信息<br>-a：显示全部文件，连同隐藏<br>-d:仅列出目录本身</p><h4 id="cp，-rm，mv：复制、删除和移动"><a href="#cp，-rm，mv：复制、删除和移动" class="headerlink" title="cp， rm，mv：复制、删除和移动"></a>cp， rm，mv：复制、删除和移动</h4><ul><li>cp ~/Desktop/foo.txt ~/Downloads/foo.txt<br>:创造一个新文件</li><li>cp -r ~/Desktop/cruise_pics/ ~/Pictu:创造一个目录</li><li>cp -i:如果有重名，询问是否覆盖</li><li>rm -f:强制删除，忽略不存在文件</li><li>rm -i：互动删除，删除前会徐文</li><li>rm -r:递归删除，删除多级目录。</li><li>mv -f：强制移动，如存在，则覆盖</li><li>mv -i：如目标存在，则询问</li><li>mv -u：移动但不覆盖<h4 id="文件内容查阅"><a href="#文件内容查阅" class="headerlink" title="文件内容查阅"></a>文件内容查阅</h4>cat  由第一行开始显示文件内容<br>tac  从最后一行开始显示，可以看出 tac 是 cat 的倒着写！<br>nl   显示的时候，顺道输出行号！<br>more 一页一页的显示文件内容<br>less 与 more 类似，但是比 more 更好的是，他可以往前翻页！<br>head 只看头几行<br>tail 只看尾巴几行<br>od   以二进制的方式读取文件内容！</li><li>cat  Concatenate （连续） 的简写， 主要的功能是将一个文件的内容连续的印出在屏幕上面！<br>cat -n：带行号显示文件内容</li><li>tac 反向显示</li><li>nl添加行号打印</li><li>more 一页一页翻动<br>空白键 （space）：代表向下翻一页；<br>Enter         ：代表向下翻“一行”；<br>/字串         ：代表在这个显示的内容当中，向下搜寻“字串”这个关键字；<br>:f            ：立刻显示出文件名以及目前显示的行数；<br>q             ：代表立刻离开 more ，不再显示该文件内容<br>b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用，对管线无用。<br>less：less 的用法比起 more 又更加的有弹性，可以使用 [pageup] [pagedown] 等按键的功能来往前往后翻看文件<br>空白键    ：向下翻动一页；<br>[pagedown]：向下翻动一页；<br>[pageup]  ：向上翻动一页；<br>/字串     ：向下搜寻“字串”的功能；<br>?字串     ：向上搜寻“字串”的功能；<br>n         ：重复前一个搜寻 （与 / 或 ? 有关！）<br>N         ：反向的重复前一个搜寻 （与 / 或 ? 有关！）<br>g         ：前进到这个数据的第一行去；<br>G         ：前进到这个数据的最后一行去 （注意大小写）；<br>q         ：离开 less 这个程序；<h4 id="touch-的目的在修改文件的时间参数，但亦可用来创建空文件"><a href="#touch-的目的在修改文件的时间参数，但亦可用来创建空文件" class="headerlink" title="touch 的目的在修改文件的时间参数，但亦可用来创建空文件"></a>touch 的目的在修改文件的时间参数，但亦可用来创建空文件</h4></li><li>modification time （mtime）：<br>当该文件的“内容数据”变更时，就会更新这个时间！内容数据指的是文件的内容，而不是文件的属性或权限喔！</li><li>status time （ctime）：<br>当该文件的“状态 （status）”改变时，就会更新这个时间，举例来说，像是权限与属性被更改了，都会更新这个时间啊。 </li><li>access time （atime）：<br>当“该文件的内容被取用”时，就会更新这个读取时间 （access）。举例来说，我们使用 cat 去读取 /etc/man_db.conf ， 就会更新该文件的 atime 了。</li><li>touch [-acdmt] 文件<br>选项与参数：<br>-a  ：仅修订 access time；<br>-c  ：仅修改文件的时间，若该文件不存在则不创建新文件；<br>-d  ：后面可以接欲修订的日期而不用目前的日期，也可以使用 –date=”日期或时间”<br>-m  ：仅修改 mtime ；<br>-t  ：后面可以接欲修订的时间而不用目前的时间<h4 id="文件与目录的默认权限与隐私设置"><a href="#文件与目录的默认权限与隐私设置" class="headerlink" title="文件与目录的默认权限与隐私设置"></a>文件与目录的默认权限与隐私设置</h4>修改属性：chgrp、chown、chmod<br>文件夹的默认权限：<br>umask：目前使用者在创建文件或目录时候的权限默认值<h4 id="指令与文件的搜寻："><a href="#指令与文件的搜寻：" class="headerlink" title="指令与文件的搜寻："></a>指令与文件的搜寻：</h4>指定文件搜寻：which 寻找可执行文件<br>文件文件名的搜寻;<br>find、whereis:由一些特殊的目录中寻找文件名<br>、locate</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;目录表示&quot;&gt;&lt;a href=&quot;#目录表示&quot; class=&quot;headerlink&quot; title=&quot;目录表示&quot;&gt;&lt;/a&gt;目录表示&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;.代表此层目录&lt;/li&gt;
&lt;li&gt;..代表上层目录&lt;/li&gt;
&lt;li&gt;-代表前一个工作目录&lt;/li&gt;
&lt;li&gt;~
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux常用命令总结</title>
    <link href="https://langya1945.xyz/post/1fe3367f.html"/>
    <id>https://langya1945.xyz/post/1fe3367f.html</id>
    <published>2018-08-21T10:03:12.000Z</published>
    <updated>2018-08-21T02:03:35.266Z</updated>
    
    <content type="html"><![CDATA[<p>###概念：命令行、终端、shell、bash。<br>  <br>     &ensp;&ensp;&ensp;1. 命令行是在dos（Disk Operation System 磁盘操作系统）下运行的命令，通俗地讲，就是你输入的那一串串字符。。。<br>  2. 终端是写命令行的地方，比如windows下的命令提示符、mac和Linux下的终端、windows下安装的cmder或者是gitbash。<br>  3. shell用于执行在终端上写的命令，读取字符串并执行，所以应该算是——脚本语言？百度来了一个专业名词叫命令解释器。<br>  4. bash是实现shell功能的一个东西，是shell的一个实例。<br>  综上，终端是一种设备，直接获取输入呈现输出（比如说键盘显示屏…），终端承载shell，但是shell是一种通用称呼，bash则是shell的一个实例，shell读取命令之后与内核交互然后给出反馈输出到终端。</p><p>###从常用命令</p><ul><li>显示日期与时间的指令： date</li><li>显示日历的指令： cal</li><li>简单好用的计算机： bc</li><li>shutdown -h now 立马关机</li><li>shutdown -r now 系统立刻重新开机</li><li>shutdown -h 12：00整点关机</li><li>shutdown -r +30  再过三十分钟系统会重新开机</li><li>halt 进入系统停止的模式</li><li>poweroff   进入系统关机模式，直接关机没有提供电力喔！</li><li>reboot     直接重新开机</li><li>suspend    进入休眠模式<br>###按键</li><li>[Tab] 接在一串指令的第一个字的后面，则为“命令补全”；<br>接在一串指令的第二个字以后时，则为“文件补齐”！</li><li>[Ctrl]-C 终止程序运行</li><li>[Ctrl]-D 退出命令行</li><li>[shift]+[PageUP]|[Page Down] 翻页<br>###权限管理<br><img src="http://upload-images.jianshu.io/upload_images/4310548-a22dfde4e8761582.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="文件权限说明"><br><img src="http://upload-images.jianshu.io/upload_images/4310548-deb62babaa46dfac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="文件说明"><br>####修改权限</li><li>chgrp ：改变文件所属群组</li><li>chown ：改变文件拥有者</li><li>chmod ：改变文件的权限, SUID, SGID, SBIT等等的特性<br>####根目录下文件夹的含义<br><img src="http://upload-images.jianshu.io/upload_images/4310548-86aa23af8fcbd654.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="目录树"></li></ul><ol><li>bin：系统有很多放置可执行文件的目录，但/bin比较特殊。因为/bin放置的是在单人维护模式下还能够被操作的指令。</li><li>boot：主要在放置开机会使用到的文件，包括Linux核心文件以及开机菜单与开机所需配置文件等等</li><li>dev：在Linux系统上，任何设备与周边设备都是以文件的型态存在于这个目录当中的。</li><li>etc：系统主要的配置文件几乎都放置在这个目录内，例如人员的帐号密码档、 各种服务的启始档等等。</li><li>lib：lib放置的则是在开机时会用到的函数库， 以及在/bin或/sbin下面的指令会调用的函数库而已。</li><li>media：media下面放置的就是可移除的设备啦！ 包括软盘、光盘、DVD等等设备都暂时挂载于此</li><li>mnt：暂时挂载某些额外的设备，一般建议你可以放置到这个目录中。 在古早时候，这个目录的用途与/media相同</li><li>opt：给第三方协力软件放置的目录。</li><li>sbin：放在/sbin下面的为开机过程中所需要的，里面包括了开机、修复、还原系统所需要的指令。</li><li>srv: srv可以视为“service”的缩写，是一些网络服务启动之后，这些服务所需要取用的数据目录。</li><li>tmp: 这是让一般使用者或者是正在执行的程序暂时放置文件的地方。 这个目录是任何人都能够存取的，所以你需要定期的清理一下。</li><li>home: 这是系统默认的使用者主文件夹（home directory）。在你新增一个一般使用者帐号时， 默认的使用者主文件夹都会规范到这里来</li><li>lib： 用来存放与 /lib 不同的格式的二进制函数库，例如支持 64 位的 /lib64 函数库等</li><li>root：系统管理员（root）的主文件夹。之所以放在这里，是因为如果进入单人维护模式而仅挂载根目录时， 该目录就能够拥有root的主文件夹，所以我们会希望root的主文件夹与根目录放置在同一个分区中。</li><li>usr： usr是Unix Software Resource的缩写， 也就是“Unix操作系统软件资源”所放置的目录</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###概念：命令行、终端、shell、bash。&lt;br&gt;  &lt;br&gt;     &amp;ensp;&amp;ensp;&amp;ensp;1. 命令行是在dos（Disk Operation System 磁盘操作系统）下运行的命令，通俗地讲，就是你输入的那一串串字符。。。&lt;br&gt;  2. 终端是
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git学习</title>
    <link href="https://langya1945.xyz/post/607d6c62.html"/>
    <id>https://langya1945.xyz/post/607d6c62.html</id>
    <published>2018-08-21T10:02:17.000Z</published>
    <updated>2018-08-21T02:02:48.620Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Git三种状态"><a href="#Git三种状态" class="headerlink" title="Git三种状态"></a>Git三种状态</h3><p>*. 已提交（committed）:已提交表示数据已经安全的保存在本地数据库中</p><ul><li>已修改（modified）:已修改表示修改了文件，但还没保存到数据库中。</li><li>已暂存（staged）: 已暂存表示对一个已修改文件的当前版本做了标记，使之包含在下次<br>提交的快照中。<br>由此引入 Git 项目的三个工作区域的概念：Git 仓库、工作目录以及暂存区域。<br><img src="http://upload-images.jianshu.io/upload_images/4310548-0ae64aa1e934b4aa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li><li>Git 仓库目录是 Git 用来保存项目的元数据和对象数据库的地方。 这是 Git 中最重要的部分，从其它计算机克隆仓库时，拷贝的就是这里的数据。</li><li>工作目录是对项目的某个版本独立提取出来的内容。 这些从 Git 仓库的压缩数据库中提取出来的文件，放在磁盘上供你使用或修改。</li><li>暂存区域是一个文件，保存了下次将提交的文件列表信息，一般在 Git 仓库目录中。 有时候也被称作<code></code>索引’’，不过一般说法还是叫暂存区域。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Git三种状态&quot;&gt;&lt;a href=&quot;#Git三种状态&quot; class=&quot;headerlink&quot; title=&quot;Git三种状态&quot;&gt;&lt;/a&gt;Git三种状态&lt;/h3&gt;&lt;p&gt;*. 已提交（committed）:已提交表示数据已经安全的保存在本地数据库中&lt;/p&gt;
&lt;ul&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>申请微软onedrive学生版1T使用空间</title>
    <link href="https://langya1945.xyz/post/9140c1e3.html"/>
    <id>https://langya1945.xyz/post/9140c1e3.html</id>
    <published>2018-08-21T10:01:15.000Z</published>
    <updated>2018-08-21T02:01:39.240Z</updated>
    
    <content type="html"><![CDATA[<p>可以参考这个链接<a href="http://liyuans.com/archives/microsoft-students-package.html" rel="external nofollow noopener noreferrer" target="_blank">http://liyuans.com/archives/microsoft-students-package.html</a></p><h3 id="1-首先你得有一个学校的邮箱账号"><a href="#1-首先你得有一个学校的邮箱账号" class="headerlink" title="1.首先你得有一个学校的邮箱账号"></a>1.首先你得有一个学校的邮箱账号</h3><p>一般情况下，都是在学校的官网登录个人账号，开通邮箱，格式为<strong>学号+学校域名+edu+cn</strong>.不过毕业以后，学校会不会把邮箱收回，就另当别论了，反正这段时间肯定是可以用的。</p><h3 id="2-进入官网https-products-office-com-en-us-student-tab-students。登录邮箱账号，填写信息，会收到验证码，点击提交。"><a href="#2-进入官网https-products-office-com-en-us-student-tab-students。登录邮箱账号，填写信息，会收到验证码，点击提交。" class="headerlink" title="2.进入官网https://products.office.com/en-us/student?tab=students。登录邮箱账号，填写信息，会收到验证码，点击提交。"></a>2.进入官网<a href="https://products.office.com/en-us/student?tab=students。登录邮箱账号，填写信息，会收到验证码，点击提交。" rel="external nofollow noopener noreferrer" target="_blank">https://products.office.com/en-us/student?tab=students。登录邮箱账号，填写信息，会收到验证码，点击提交。</a></h3><h3 id="3-下载onedrive，登录申请的邮箱账号，选择自动同步文件夹即可。"><a href="#3-下载onedrive，登录申请的邮箱账号，选择自动同步文件夹即可。" class="headerlink" title="3.下载onedrive，登录申请的邮箱账号，选择自动同步文件夹即可。"></a>3.下载onedrive，登录申请的邮箱账号，选择自动同步文件夹即可。</h3><h3 id="大功告成，亲测有效"><a href="#大功告成，亲测有效" class="headerlink" title="大功告成，亲测有效"></a>大功告成，亲测有效</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;可以参考这个链接&lt;a href=&quot;http://liyuans.com/archives/microsoft-students-package.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>杭电VPN访问学校资源</title>
    <link href="https://langya1945.xyz/post/139a837b.html"/>
    <id>https://langya1945.xyz/post/139a837b.html</id>
    <published>2018-08-21T09:58:34.000Z</published>
    <updated>2018-08-21T02:00:29.495Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-登录杭电官网选择VPN登录。"><a href="#1-登录杭电官网选择VPN登录。" class="headerlink" title="1. 登录杭电官网选择VPN登录。"></a>1. 登录杭电官网选择VPN登录。</h4><h4 id="2-浏览器会自动下载easyconnect组件，安装完成后打开软件，输入服务器地址-https-vpn-hdu-edu-cn-连接服务器，然后通过数字杭电账号登录。"><a href="#2-浏览器会自动下载easyconnect组件，安装完成后打开软件，输入服务器地址-https-vpn-hdu-edu-cn-连接服务器，然后通过数字杭电账号登录。" class="headerlink" title="2.浏览器会自动下载easyconnect组件，安装完成后打开软件，输入服务器地址 https://vpn.hdu.edu.cn,连接服务器，然后通过数字杭电账号登录。"></a>2.浏览器会自动下载easyconnect组件，安装完成后打开软件，输入服务器地址 <a href="https://vpn.hdu.edu.cn,连接服务器，然后通过数字杭电账号登录。" rel="external nofollow noopener noreferrer" target="_blank">https://vpn.hdu.edu.cn,连接服务器，然后通过数字杭电账号登录。</a></h4><h4 id="3-经测试，easyconnect会打开默认浏览器，chrome和firefox均不能打开，一直处于初始化状态，这个时候需要手动把默认浏览器设置成为IE即可。"><a href="#3-经测试，easyconnect会打开默认浏览器，chrome和firefox均不能打开，一直处于初始化状态，这个时候需要手动把默认浏览器设置成为IE即可。" class="headerlink" title="3.经测试，easyconnect会打开默认浏览器，chrome和firefox均不能打开，一直处于初始化状态，这个时候需要手动把默认浏览器设置成为IE即可。"></a>3.经测试，easyconnect会打开默认浏览器，chrome和firefox均不能打开，一直处于初始化状态，这个时候需要手动把默认浏览器设置成为IE即可。</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-登录杭电官网选择VPN登录。&quot;&gt;&lt;a href=&quot;#1-登录杭电官网选择VPN登录。&quot; class=&quot;headerlink&quot; title=&quot;1. 登录杭电官网选择VPN登录。&quot;&gt;&lt;/a&gt;1. 登录杭电官网选择VPN登录。&lt;/h4&gt;&lt;h4 id=&quot;2-浏览器会自
      
    
    </summary>
    
      <category term="技术文档" scheme="https://langya1945.xyz/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="VPN,学校" scheme="https://langya1945.xyz/tags/VPN-%E5%AD%A6%E6%A0%A1/"/>
    
  </entry>
  
  <entry>
    <title>test2</title>
    <link href="https://langya1945.xyz/post/13bb8d58.html"/>
    <id>https://langya1945.xyz/post/13bb8d58.html</id>
    <published>2018-08-15T08:37:00.000Z</published>
    <updated>2018-08-21T01:41:26.359Z</updated>
    
    <content type="html"><![CDATA[<h2 id="你好-，这里是第二次测试"><a href="#你好-，这里是第二次测试" class="headerlink" title="你好 ，这里是第二次测试"></a>你好 ，这里是第二次测试</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;你好-，这里是第二次测试&quot;&gt;&lt;a href=&quot;#你好-，这里是第二次测试&quot; class=&quot;headerlink&quot; title=&quot;你好 ，这里是第二次测试&quot;&gt;&lt;/a&gt;你好 ，这里是第二次测试&lt;/h2&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>消愁有感</title>
    <link href="https://langya1945.xyz/post/f827bbe2.html"/>
    <id>https://langya1945.xyz/post/f827bbe2.html</id>
    <published>2018-08-13T23:59:30.007Z</published>
    <updated>2018-08-14T09:53:09.049Z</updated>
    
    <content type="html"><![CDATA[<h1 id="有故事的人有故事的事"><a href="#有故事的人有故事的事" class="headerlink" title="有故事的人有故事的事"></a>有故事的人有故事的事</h1><p>   <strong>消愁</strong><br>     毛不易</p><blockquote><p>当你走进这欢乐场 背上所有的梦与想 各色的脸上各色的妆 没人记得你的模样 三巡酒过你在角落 固执的唱着苦涩的歌 听他在喧嚣里被淹没<br>你拿起酒杯对自己说 一杯敬朝阳 一杯敬月光 唤醒我的向往 温柔了寒窗 于是可以不回头地逆风飞翔 不怕心头有雨 眼底有霜 一杯敬故乡<br>一杯敬远方 守着我的善良 催着我成长 所以南北的路从此不再漫长 灵魂不再无处安放 一杯敬明天 一杯敬过往 支撑我的身体 厚重了肩膀<br>虽然从不相信所谓山高水长 人生苦短何必念念不忘 一杯敬自由 一杯敬死亡 宽恕我的平凡 驱散了迷惘 好吧天亮之后总是潦草离场 清醒的人最荒唐<br>好吧天亮之后总是潦草离场 清醒的人最荒唐</p></blockquote><p>[消愁] []</p><p>  <code>当你走进这欢乐场，背上所有的梦与想</code><br>  我们来到这世间，就像一场游戏，一个欢乐场，带着家人的希望，自己的理想，去北漂，去个大城市，去原本不属于自己的城市打拼<br>   <code>各色的脸上各色的霜，没人记得你的模样</code><br>  才发现原来每个人都是带着面具生活，贴着各色的标签，从事的不同的职业，在这个城市的各个大楼，各个角落里过着自己的生活，不需要知道他们来自哪里，也没有知道自己当初的模样<br>  <code>三巡酒过你在角落，固执的唱着苦涩的歌，听他在喧嚣里被淹没，你拿起酒杯对自己说</code><br>  坚持自己的理想，努力不让现实改变自己，在大是大非面前，决不放弃自己的底线，自己的原则，即使别人不理解，也要坚持到底<br>  <code>一杯敬朝阳，一杯敬月光，唤醒了我的向往，温柔了寒窗， 于是可以不回头地逆风飞翔 不怕心头有雨 眼底有霜</code><br>  少年时期，理想在远方，家乡在身边，为了理想必须远离家乡，十年寒窗无人问，一朝成名天下知，开始背井离乡，寄人篱下的打拼，磕磕碰碰，再苦再累也不退缩，对家里只报喜不报忧，以免家人担心。一步一步，踏踏实实，还有敢打敢拼，人穷不能志短<br> <code>一杯敬故乡， 一杯敬远方，守着我的善良，催着我成长，所以南北的路从此不再漫长，灵魂不再无处安放</code><br>  青年时期，家乡变成了故乡，亲人也只放在心底，难得见到一次，走南闯北，来来回回，成了常态。不变的是那一颗童心，小心翼翼的保存着，不让任何东西玷污，那是自己最后一片净土。这里保存着自己最独特的地方，不为物质权利所打动，只是单纯快乐。<br> <code>一杯敬明天 一杯敬过往 支撑我的身体 厚重了肩膀，虽然从不相信所谓山高水长 人生苦短何必念念不忘</code><br>  人到中年，世界观价值观已成型，不会轻易改动，明白了一些道理，知道了童话就是童话，快乐是暂时的，痛苦也不会持续太久，取决于自己的内心世界，也受外界情况影响。没有什么是持久的，所有得到的不过是暂时拥有，重要的是当时的体验，以及对后来的影响。<br>  <code>一杯敬自由 一杯敬死亡 宽恕我的平凡 驱散了迷惘 好吧天亮之后总是潦草离场 清醒的人最荒唐</code><br>  到了人生的最后阶段，死亡渐进，自由永恒。回首往事，发现自己竟然经历了这么多，还有这么多事没有做呀，但是没有时间了，如果能健健康康的再活十几年该有多好。做了近百年的梦，终于该醒了。。。醒了之后又会是怎样一副场景呢</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;有故事的人有故事的事&quot;&gt;&lt;a href=&quot;#有故事的人有故事的事&quot; class=&quot;headerlink&quot; title=&quot;有故事的人有故事的事&quot;&gt;&lt;/a&gt;有故事的人有故事的事&lt;/h1&gt;&lt;p&gt;   &lt;strong&gt;消愁&lt;/strong&gt;&lt;br&gt;     毛不易&lt;/p&gt;
      
    
    </summary>
    
      <category term="感悟" scheme="https://langya1945.xyz/categories/%E6%84%9F%E6%82%9F/"/>
    
    
      <category term="杂想" scheme="https://langya1945.xyz/tags/%E6%9D%82%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建历程</title>
    <link href="https://langya1945.xyz/post/88b59cc8.html"/>
    <id>https://langya1945.xyz/post/88b59cc8.html</id>
    <published>2018-08-13T23:59:29.309Z</published>
    <updated>2018-08-14T09:53:02.249Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h1><p>   其实早上就有搭建博客的想法，看到别人的博客搭的既简洁有炫酷，然后在博客里分享各种技术上的经验或是生活感悟，很是羡慕，不喜欢其他网站提供的现成模板，喜欢自由，喜欢折腾，就想着自己有时间一定要做一个出来。然而一是一直在忙于各种杂事，没时间做；二是因为懒（这是主要原因）闲的时候不想做，就一拖再拖，直到这段时间稍微闲了一点有了自己的时间，终于可以折腾自己的博客了。</p><ul><li><p>我用了多久搭建自己的博客<br>对着别人五分钟建站，愣是用了我三四天的时间才弄出来，整个过程一波三折，下面记录整个搭建过程。一是自己留一个备份，二是给有机会看到这篇博客的人少走一些弯路。</p><ul><li>搭建平台<br>系统：windows10 64位<br>控制台：cmder，git<br>hexo+Github</li></ul><h1 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h1><p>整个博客是搭建在github上的，后台用的是hexo，主题是简洁大方的next，域名用的是阿里云的top域名（谁让它便宜呢，一年才一块钱），阅读次数统计用的是leancloud，还有很多功能有待加入。。。不要着急</p><h2 id="一、-注册github账户"><a href="#一、-注册github账户" class="headerlink" title="一、 注册github账户"></a>一、 注册github账户</h2><p>其实这个博客是托管在github上的，作为全球最大的大型同性交友平台，github提供免费的代码托管服务，为了更好的展示项目，github提供了一个github pages用来展示静态的网页，所谓搭建博客，其实借用的就是这个功能。<br>首先注册、登录<a href="github.com">github.com</a>,记住自己的Username。<br>然后新建一个仓库，仓库的名字和自己Username一直（这个很重要）<br>例如我的域名是<a href="Github.com/wangjie1945">Github.com/wangjie1945</a>, 就填入wangjie1945.github.io</p><h2 id="二、环境安装"><a href="#二、环境安装" class="headerlink" title="二、环境安装"></a>二、环境安装</h2><p>1、安装 Node.js<br>2、安装Git for windows。<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/" rel="external nofollow noopener noreferrer" target="_blank">Git教程</a>推荐看廖雪峰老师的，安装完成后在开始菜单里找到Git-&gt;Git Bash,输入自己github的邮箱和用户名。<br>3、安装Hexo<br>$npm install -g hexo - cli<br>如果一切顺利，环境我们就配置好了。</p><h2 id="三、设置"><a href="#三、设置" class="headerlink" title="三、设置"></a>三、设置</h2><p>1、在自己的目录下建立一个目录，命名为blog<br>2、在blog文件夹右击，选择Git Bush Here，输入</p><pre><code>hexo init blog等一下就会有成功提示。</code></pre><p>3、执行hexo g命令，生成必要文件<br>4、执行hexo s，启动服务器。<br>5、访问·127.0.0.1/4000,就可以看到网站的初步模样。</p><h2 id="四、上传到github"><a href="#四、上传到github" class="headerlink" title="四、上传到github"></a>四、上传到github</h2><p>在git里加入SSH key，直接连接到github，然后输入hexo d提交给远程仓库。</p><h2 id="五、配置博客"><a href="#五、配置博客" class="headerlink" title="五、配置博客"></a>五、配置博客</h2><p>下载next主题，复制到theme文件夹，启动主题。<br>接下就是对主题的各种折腾，配置各种插件，一个坑接着一个坑</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这是真正意义上的第一篇技术博客，感觉静下心来写博客真心不容易，对那些写的通俗易懂教程的人崇拜之情又增加了几分，有时间再补一个关于主题的设置吧</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说在前面&quot;&gt;&lt;a href=&quot;#说在前面&quot; class=&quot;headerlink&quot; title=&quot;说在前面&quot;&gt;&lt;/a&gt;说在前面&lt;/h1&gt;&lt;p&gt;   其实早上就有搭建博客的想法，看到别人的博客搭的既简洁有炫酷，然后在博客里分享各种技术上的经验或是生活感悟，很是羡慕，不
      
    
    </summary>
    
      <category term="博客" scheme="https://langya1945.xyz/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="技术总结,原创,2017" scheme="https://langya1945.xyz/tags/%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%93-%E5%8E%9F%E5%88%9B-2017/"/>
    
  </entry>
  
</feed>
