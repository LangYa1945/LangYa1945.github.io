<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux目录管理]]></title>
    <url>%2Fpost%2Fdd43b6cd.html</url>
    <content type="text"><![CDATA[目录表示 .代表此层目录 ..代表上层目录 -代表前一个工作目录 ~目前使用者的主目录 ~account代表 account 这个使用者的主文件目录命令 cd：变换目录 pwd：显示目前的目录 mkdir：创建一个新的目录 rmdir：删除一个空的目录：rmdir 仅能删除空目录，要删除非空目录需使用“ rm -r ”指令cd: change dictionary. cd ~：示回到自己的主文件夹 cd :没有加上任何路径，也还是代表回到自己主文件夹. cd ~langya1945:代表去到 langya1945 这个使用者的主文件夹 cd -:表示回到刚刚的那个目录.pwd :print working directory 没什么好说的mkdir：make dictionary mkdir -m:强制设置文件权限mkdir -m 711 test1:给与test1文件夹drwx–x–x的权限 mkdir -p:创造迭代目录： # Create a directory and all its parentsmkdir -p foo/bar/baz # Create foo/bar and foo/baz directoriesmkdir -p foo/{bar,baz}** # Create the foo/bar, foo/baz, foo/baz/zip and foo/baz/zap directoriesmkdir -p foo/{bar,baz/{zip,zap}} ####rm:remove dictionary# Remove files and subdirsrm -rf path/to/the/target/ # Ignore non existent filesrm -f path/to/the/target**# Remove a file with his inodefind /tmp/ -inum 6666 -exec rm -i ‘{}’ \; rmdir-p:连同上层、空的文件夹一起删 ls：文件与目录的检视-l:列出所有文件信息-a：显示全部文件，连同隐藏-d:仅列出目录本身 cp， rm，mv：复制、删除和移动 cp ~/Desktop/foo.txt ~/Downloads/foo.txt:创造一个新文件 cp -r ~/Desktop/cruise_pics/ ~/Pictu:创造一个目录 cp -i:如果有重名，询问是否覆盖 rm -f:强制删除，忽略不存在文件 rm -i：互动删除，删除前会徐文 rm -r:递归删除，删除多级目录。 mv -f：强制移动，如存在，则覆盖 mv -i：如目标存在，则询问 mv -u：移动但不覆盖文件内容查阅cat 由第一行开始显示文件内容tac 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！nl 显示的时候，顺道输出行号！more 一页一页的显示文件内容less 与 more 类似，但是比 more 更好的是，他可以往前翻页！head 只看头几行tail 只看尾巴几行od 以二进制的方式读取文件内容！ cat Concatenate （连续） 的简写， 主要的功能是将一个文件的内容连续的印出在屏幕上面！cat -n：带行号显示文件内容 tac 反向显示 nl添加行号打印 more 一页一页翻动空白键 （space）：代表向下翻一页；Enter ：代表向下翻“一行”；/字串 ：代表在这个显示的内容当中，向下搜寻“字串”这个关键字；:f ：立刻显示出文件名以及目前显示的行数；q ：代表立刻离开 more ，不再显示该文件内容b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用，对管线无用。less：less 的用法比起 more 又更加的有弹性，可以使用 [pageup] [pagedown] 等按键的功能来往前往后翻看文件空白键 ：向下翻动一页；[pagedown]：向下翻动一页；[pageup] ：向上翻动一页；/字串 ：向下搜寻“字串”的功能；?字串 ：向上搜寻“字串”的功能；n ：重复前一个搜寻 （与 / 或 ? 有关！）N ：反向的重复前一个搜寻 （与 / 或 ? 有关！）g ：前进到这个数据的第一行去；G ：前进到这个数据的最后一行去 （注意大小写）；q ：离开 less 这个程序；touch 的目的在修改文件的时间参数，但亦可用来创建空文件 modification time （mtime）：当该文件的“内容数据”变更时，就会更新这个时间！内容数据指的是文件的内容，而不是文件的属性或权限喔！ status time （ctime）：当该文件的“状态 （status）”改变时，就会更新这个时间，举例来说，像是权限与属性被更改了，都会更新这个时间啊。 access time （atime）：当“该文件的内容被取用”时，就会更新这个读取时间 （access）。举例来说，我们使用 cat 去读取 /etc/man_db.conf ， 就会更新该文件的 atime 了。 touch [-acdmt] 文件选项与参数：-a ：仅修订 access time；-c ：仅修改文件的时间，若该文件不存在则不创建新文件；-d ：后面可以接欲修订的日期而不用目前的日期，也可以使用 –date=”日期或时间”-m ：仅修改 mtime ；-t ：后面可以接欲修订的时间而不用目前的时间文件与目录的默认权限与隐私设置修改属性：chgrp、chown、chmod文件夹的默认权限：umask：目前使用者在创建文件或目录时候的权限默认值指令与文件的搜寻：指定文件搜寻：which 寻找可执行文件文件文件名的搜寻;find、whereis:由一些特殊的目录中寻找文件名、locate]]></content>
  </entry>
  <entry>
    <title><![CDATA[Linux常用命令总结]]></title>
    <url>%2Fpost%2F1fe3367f.html</url>
    <content type="text"><![CDATA[###概念：命令行、终端、shell、bash。 &ensp;&ensp;&ensp;1. 命令行是在dos（Disk Operation System 磁盘操作系统）下运行的命令，通俗地讲，就是你输入的那一串串字符。。。 2. 终端是写命令行的地方，比如windows下的命令提示符、mac和Linux下的终端、windows下安装的cmder或者是gitbash。 3. shell用于执行在终端上写的命令，读取字符串并执行，所以应该算是——脚本语言？百度来了一个专业名词叫命令解释器。 4. bash是实现shell功能的一个东西，是shell的一个实例。 综上，终端是一种设备，直接获取输入呈现输出（比如说键盘显示屏…），终端承载shell，但是shell是一种通用称呼，bash则是shell的一个实例，shell读取命令之后与内核交互然后给出反馈输出到终端。 ###从常用命令 显示日期与时间的指令： date 显示日历的指令： cal 简单好用的计算机： bc shutdown -h now 立马关机 shutdown -r now 系统立刻重新开机 shutdown -h 12：00整点关机 shutdown -r +30 再过三十分钟系统会重新开机 halt 进入系统停止的模式 poweroff 进入系统关机模式，直接关机没有提供电力喔！ reboot 直接重新开机 suspend 进入休眠模式###按键 [Tab] 接在一串指令的第一个字的后面，则为“命令补全”；接在一串指令的第二个字以后时，则为“文件补齐”！ [Ctrl]-C 终止程序运行 [Ctrl]-D 退出命令行 [shift]+[PageUP]|[Page Down] 翻页###权限管理####修改权限 chgrp ：改变文件所属群组 chown ：改变文件拥有者 chmod ：改变文件的权限, SUID, SGID, SBIT等等的特性####根目录下文件夹的含义 bin：系统有很多放置可执行文件的目录，但/bin比较特殊。因为/bin放置的是在单人维护模式下还能够被操作的指令。 boot：主要在放置开机会使用到的文件，包括Linux核心文件以及开机菜单与开机所需配置文件等等 dev：在Linux系统上，任何设备与周边设备都是以文件的型态存在于这个目录当中的。 etc：系统主要的配置文件几乎都放置在这个目录内，例如人员的帐号密码档、 各种服务的启始档等等。 lib：lib放置的则是在开机时会用到的函数库， 以及在/bin或/sbin下面的指令会调用的函数库而已。 media：media下面放置的就是可移除的设备啦！ 包括软盘、光盘、DVD等等设备都暂时挂载于此 mnt：暂时挂载某些额外的设备，一般建议你可以放置到这个目录中。 在古早时候，这个目录的用途与/media相同 opt：给第三方协力软件放置的目录。 sbin：放在/sbin下面的为开机过程中所需要的，里面包括了开机、修复、还原系统所需要的指令。 srv: srv可以视为“service”的缩写，是一些网络服务启动之后，这些服务所需要取用的数据目录。 tmp: 这是让一般使用者或者是正在执行的程序暂时放置文件的地方。 这个目录是任何人都能够存取的，所以你需要定期的清理一下。 home: 这是系统默认的使用者主文件夹（home directory）。在你新增一个一般使用者帐号时， 默认的使用者主文件夹都会规范到这里来 lib： 用来存放与 /lib 不同的格式的二进制函数库，例如支持 64 位的 /lib64 函数库等 root：系统管理员（root）的主文件夹。之所以放在这里，是因为如果进入单人维护模式而仅挂载根目录时， 该目录就能够拥有root的主文件夹，所以我们会希望root的主文件夹与根目录放置在同一个分区中。 usr： usr是Unix Software Resource的缩写， 也就是“Unix操作系统软件资源”所放置的目录]]></content>
  </entry>
  <entry>
    <title><![CDATA[Git学习]]></title>
    <url>%2Fpost%2F607d6c62.html</url>
    <content type="text"><![CDATA[Git三种状态*. 已提交（committed）:已提交表示数据已经安全的保存在本地数据库中 已修改（modified）:已修改表示修改了文件，但还没保存到数据库中。 已暂存（staged）: 已暂存表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。由此引入 Git 项目的三个工作区域的概念：Git 仓库、工作目录以及暂存区域。 Git 仓库目录是 Git 用来保存项目的元数据和对象数据库的地方。 这是 Git 中最重要的部分，从其它计算机克隆仓库时，拷贝的就是这里的数据。 工作目录是对项目的某个版本独立提取出来的内容。 这些从 Git 仓库的压缩数据库中提取出来的文件，放在磁盘上供你使用或修改。 暂存区域是一个文件，保存了下次将提交的文件列表信息，一般在 Git 仓库目录中。 有时候也被称作索引’’，不过一般说法还是叫暂存区域。]]></content>
  </entry>
  <entry>
    <title><![CDATA[申请微软onedrive学生版1T使用空间]]></title>
    <url>%2Fpost%2F9140c1e3.html</url>
    <content type="text"><![CDATA[可以参考这个链接http://liyuans.com/archives/microsoft-students-package.html 1.首先你得有一个学校的邮箱账号一般情况下，都是在学校的官网登录个人账号，开通邮箱，格式为学号+学校域名+edu+cn.不过毕业以后，学校会不会把邮箱收回，就另当别论了，反正这段时间肯定是可以用的。 2.进入官网https://products.office.com/en-us/student?tab=students。登录邮箱账号，填写信息，会收到验证码，点击提交。3.下载onedrive，登录申请的邮箱账号，选择自动同步文件夹即可。大功告成，亲测有效]]></content>
  </entry>
  <entry>
    <title><![CDATA[杭电VPN访问学校资源]]></title>
    <url>%2Fpost%2F139a837b.html</url>
    <content type="text"><![CDATA[1. 登录杭电官网选择VPN登录。2.浏览器会自动下载easyconnect组件，安装完成后打开软件，输入服务器地址 https://vpn.hdu.edu.cn,连接服务器，然后通过数字杭电账号登录。3.经测试，easyconnect会打开默认浏览器，chrome和firefox均不能打开，一直处于初始化状态，这个时候需要手动把默认浏览器设置成为IE即可。]]></content>
      <categories>
        <category>技术文档</category>
      </categories>
      <tags>
        <tag>VPN,学校</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[test2]]></title>
    <url>%2Fpost%2F13bb8d58.html</url>
    <content type="text"><![CDATA[你好 ，这里是第二次测试]]></content>
  </entry>
  <entry>
    <title><![CDATA[消愁有感]]></title>
    <url>%2Fpost%2Ff827bbe2.html</url>
    <content type="text"><![CDATA[有故事的人有故事的事 消愁 毛不易 当你走进这欢乐场 背上所有的梦与想 各色的脸上各色的妆 没人记得你的模样 三巡酒过你在角落 固执的唱着苦涩的歌 听他在喧嚣里被淹没你拿起酒杯对自己说 一杯敬朝阳 一杯敬月光 唤醒我的向往 温柔了寒窗 于是可以不回头地逆风飞翔 不怕心头有雨 眼底有霜 一杯敬故乡一杯敬远方 守着我的善良 催着我成长 所以南北的路从此不再漫长 灵魂不再无处安放 一杯敬明天 一杯敬过往 支撑我的身体 厚重了肩膀虽然从不相信所谓山高水长 人生苦短何必念念不忘 一杯敬自由 一杯敬死亡 宽恕我的平凡 驱散了迷惘 好吧天亮之后总是潦草离场 清醒的人最荒唐好吧天亮之后总是潦草离场 清醒的人最荒唐 [消愁] [] 当你走进这欢乐场，背上所有的梦与想 我们来到这世间，就像一场游戏，一个欢乐场，带着家人的希望，自己的理想，去北漂，去个大城市，去原本不属于自己的城市打拼 各色的脸上各色的霜，没人记得你的模样 才发现原来每个人都是带着面具生活，贴着各色的标签，从事的不同的职业，在这个城市的各个大楼，各个角落里过着自己的生活，不需要知道他们来自哪里，也没有知道自己当初的模样 三巡酒过你在角落，固执的唱着苦涩的歌，听他在喧嚣里被淹没，你拿起酒杯对自己说 坚持自己的理想，努力不让现实改变自己，在大是大非面前，决不放弃自己的底线，自己的原则，即使别人不理解，也要坚持到底 一杯敬朝阳，一杯敬月光，唤醒了我的向往，温柔了寒窗， 于是可以不回头地逆风飞翔 不怕心头有雨 眼底有霜 少年时期，理想在远方，家乡在身边，为了理想必须远离家乡，十年寒窗无人问，一朝成名天下知，开始背井离乡，寄人篱下的打拼，磕磕碰碰，再苦再累也不退缩，对家里只报喜不报忧，以免家人担心。一步一步，踏踏实实，还有敢打敢拼，人穷不能志短 一杯敬故乡， 一杯敬远方，守着我的善良，催着我成长，所以南北的路从此不再漫长，灵魂不再无处安放 青年时期，家乡变成了故乡，亲人也只放在心底，难得见到一次，走南闯北，来来回回，成了常态。不变的是那一颗童心，小心翼翼的保存着，不让任何东西玷污，那是自己最后一片净土。这里保存着自己最独特的地方，不为物质权利所打动，只是单纯快乐。 一杯敬明天 一杯敬过往 支撑我的身体 厚重了肩膀，虽然从不相信所谓山高水长 人生苦短何必念念不忘 人到中年，世界观价值观已成型，不会轻易改动，明白了一些道理，知道了童话就是童话，快乐是暂时的，痛苦也不会持续太久，取决于自己的内心世界，也受外界情况影响。没有什么是持久的，所有得到的不过是暂时拥有，重要的是当时的体验，以及对后来的影响。 一杯敬自由 一杯敬死亡 宽恕我的平凡 驱散了迷惘 好吧天亮之后总是潦草离场 清醒的人最荒唐 到了人生的最后阶段，死亡渐进，自由永恒。回首往事，发现自己竟然经历了这么多，还有这么多事没有做呀，但是没有时间了，如果能健健康康的再活十几年该有多好。做了近百年的梦，终于该醒了。。。醒了之后又会是怎样一副场景呢]]></content>
      <categories>
        <category>感悟</category>
      </categories>
      <tags>
        <tag>杂想</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客搭建历程]]></title>
    <url>%2Fpost%2F88b59cc8.html</url>
    <content type="text"><![CDATA[说在前面 其实早上就有搭建博客的想法，看到别人的博客搭的既简洁有炫酷，然后在博客里分享各种技术上的经验或是生活感悟，很是羡慕，不喜欢其他网站提供的现成模板，喜欢自由，喜欢折腾，就想着自己有时间一定要做一个出来。然而一是一直在忙于各种杂事，没时间做；二是因为懒（这是主要原因）闲的时候不想做，就一拖再拖，直到这段时间稍微闲了一点有了自己的时间，终于可以折腾自己的博客了。 我用了多久搭建自己的博客对着别人五分钟建站，愣是用了我三四天的时间才弄出来，整个过程一波三折，下面记录整个搭建过程。一是自己留一个备份，二是给有机会看到这篇博客的人少走一些弯路。 搭建平台系统：windows10 64位控制台：cmder，githexo+Github 搭建过程整个博客是搭建在github上的，后台用的是hexo，主题是简洁大方的next，域名用的是阿里云的top域名（谁让它便宜呢，一年才一块钱），阅读次数统计用的是leancloud，还有很多功能有待加入。。。不要着急 一、 注册github账户其实这个博客是托管在github上的，作为全球最大的大型同性交友平台，github提供免费的代码托管服务，为了更好的展示项目，github提供了一个github pages用来展示静态的网页，所谓搭建博客，其实借用的就是这个功能。首先注册、登录github.com,记住自己的Username。然后新建一个仓库，仓库的名字和自己Username一直（这个很重要）例如我的域名是Github.com/wangjie1945, 就填入wangjie1945.github.io 二、环境安装1、安装 Node.js2、安装Git for windows。Git教程推荐看廖雪峰老师的，安装完成后在开始菜单里找到Git-&gt;Git Bash,输入自己github的邮箱和用户名。3、安装Hexo$npm install -g hexo - cli如果一切顺利，环境我们就配置好了。 三、设置1、在自己的目录下建立一个目录，命名为blog2、在blog文件夹右击，选择Git Bush Here，输入 hexo init blog 等一下就会有成功提示。 3、执行hexo g命令，生成必要文件4、执行hexo s，启动服务器。5、访问·127.0.0.1/4000,就可以看到网站的初步模样。 四、上传到github在git里加入SSH key，直接连接到github，然后输入hexo d提交给远程仓库。 五、配置博客下载next主题，复制到theme文件夹，启动主题。接下就是对主题的各种折腾，配置各种插件，一个坑接着一个坑 总结这是真正意义上的第一篇技术博客，感觉静下心来写博客真心不容易，对那些写的通俗易懂教程的人崇拜之情又增加了几分，有时间再补一个关于主题的设置吧]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>技术总结,原创,2017</tag>
      </tags>
  </entry>
</search>
