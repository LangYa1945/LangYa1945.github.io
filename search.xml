<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Cmd Markdown编辑器使用]]></title>
    <url>%2Fpost%2F64bcbdce.html</url>
    <content type="text"><![CDATA[欢迎使用 Cmd Markdown 编辑阅读器 我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，Cmd Markdown 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown： 整理知识，学习笔记 发布日记，杂文，所见所想 撰写发布技术文稿（代码支持） 撰写发布学术论文（LaTeX 公式支持） 除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载： Windows/Mac/Linux 全平台客户端 请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 新文稿 或者使用快捷键 Ctrl+Alt+N。 什么是 MarkdownMarkdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，粗体 或者 斜体 某些文字，更棒的是，它还可以 1. 制作一份待办事宜 Todo 列表 支持以 PDF 格式导出文稿 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 新增 Todo 列表功能 修复 LaTex 公式渲染问题 新增 LaTex 公式编号功能 2. 书写一个质能守恒公式[^LaTeX]$$E=mc^2$$ 3. 高亮一段代码[^code]1234567@requires_authorizationclass SomeClass: passif __name__ == '__main__': # A comment print 'hello world' 4. 高效绘制 流程图12345678st=&gt;start: Startop=&gt;operation: Your Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 5. 高效绘制 序列图123Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! 6. 高效绘制 甘特图12345678910111213title 项目开发流程section 项目确定 需求分析 :a1, 2016-06-22, 3d 可行性报告 :after a1, 5d 概念验证 : 5dsection 项目实施 概要设计 :2016-07-05 , 5d 详细设计 :2016-07-08, 10d 编码 :2016-07-15, 10d 测试 :2016-07-22, 5dsection 发布验收 发布: 2d 验收: 3d 7. 绘制表格 项目 价格 数量 计算机 \$1600 5 手机 \$12 12 管线 \$1 234 8. 更详细语法说明想要查看更详细的语法说明，可以参考我们准备的 Cmd Markdown 简明语法手册，进阶用户可以参考 Cmd Markdown 高阶语法手册 了解更多高级功能。 总而言之，不同于其它 所见即所得 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。 什么是 Cmd Markdown您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 编辑/发布/阅读 Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。 1. 实时同步预览我们将 Cmd Markdown 的主界面一分为二，左边为编辑区，右边为预览区，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！ 2. 编辑工具栏也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 编辑区 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。 3. 编辑模式完全心无旁骛的方式编辑文字：点击 编辑工具栏 最右侧的拉伸按钮或者按下 Ctrl + M，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！ 4. 实时的云端文稿为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 编辑工具栏 的最右侧提示 已保存 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。 5. 离线模式在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。 6. 管理工具栏为了便于管理您的文稿，在 预览区 的顶部放置了如下所示的 管理工具栏： 通过管理工具栏可以： 发布：将当前的文稿生成固定链接，在网络上发布，分享 新建：开始撰写一篇新的文稿 删除：删除当前的文稿 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地 列表：所有新增和过往的文稿都可以在这里查看、操作 模式：切换 普通/Vim/Emacs 编辑模式 7. 阅读工具栏 通过 预览区 右上角的 阅读工具栏，可以查看当前文稿的目录并增强阅读体验。 工具栏上的五个图标依次为： 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落 视图：互换左边编辑区和右边预览区的位置 主题：内置了黑白两种模式的主题，试试 黑色主题，超炫！ 阅读：心无旁骛的阅读模式提供超一流的阅读体验 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境 8. 阅读模式在 阅读工具栏 点击 或者按下 Ctrl+Alt+M 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。 9. 标签、分类和搜索在编辑区任意行首位置输入以下格式的文字可以标签当前文档： 标签： 未分类 标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示： 10. 文稿发布和分享在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 (Ctrl+Alt+P) 发布这份文档给好友吧！ 再一次感谢您花费时间阅读这份欢迎稿，点击 (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！ 作者 @ghosert2016 年 07月 07日 [^LaTeX]: 支持 LaTeX 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 MathJax 参考更多使用方法。 [^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，四十一种主流编程语言。]]></content>
  </entry>
  <entry>
    <title><![CDATA[test2]]></title>
    <url>%2Fpost%2F13bb8d58.html</url>
    <content type="text"><![CDATA[你好 ，这里是第二次测试]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[消愁有感]]></title>
    <url>%2Fpost%2Ff827bbe2.html</url>
    <content type="text"><![CDATA[有故事的人有故事的事 消愁 毛不易 当你走进这欢乐场 背上所有的梦与想 各色的脸上各色的妆 没人记得你的模样 三巡酒过你在角落 固执的唱着苦涩的歌 听他在喧嚣里被淹没你拿起酒杯对自己说 一杯敬朝阳 一杯敬月光 唤醒我的向往 温柔了寒窗 于是可以不回头地逆风飞翔 不怕心头有雨 眼底有霜 一杯敬故乡一杯敬远方 守着我的善良 催着我成长 所以南北的路从此不再漫长 灵魂不再无处安放 一杯敬明天 一杯敬过往 支撑我的身体 厚重了肩膀虽然从不相信所谓山高水长 人生苦短何必念念不忘 一杯敬自由 一杯敬死亡 宽恕我的平凡 驱散了迷惘 好吧天亮之后总是潦草离场 清醒的人最荒唐好吧天亮之后总是潦草离场 清醒的人最荒唐 [消愁] [] 当你走进这欢乐场，背上所有的梦与想 我们来到这世间，就像一场游戏，一个欢乐场，带着家人的希望，自己的理想，去北漂，去个大城市，去原本不属于自己的城市打拼 各色的脸上各色的霜，没人记得你的模样 才发现原来每个人都是带着面具生活，贴着各色的标签，从事的不同的职业，在这个城市的各个大楼，各个角落里过着自己的生活，不需要知道他们来自哪里，也没有知道自己当初的模样 三巡酒过你在角落，固执的唱着苦涩的歌，听他在喧嚣里被淹没，你拿起酒杯对自己说 坚持自己的理想，努力不让现实改变自己，在大是大非面前，决不放弃自己的底线，自己的原则，即使别人不理解，也要坚持到底 一杯敬朝阳，一杯敬月光，唤醒了我的向往，温柔了寒窗， 于是可以不回头地逆风飞翔 不怕心头有雨 眼底有霜 少年时期，理想在远方，家乡在身边，为了理想必须远离家乡，十年寒窗无人问，一朝成名天下知，开始背井离乡，寄人篱下的打拼，磕磕碰碰，再苦再累也不退缩，对家里只报喜不报忧，以免家人担心。一步一步，踏踏实实，还有敢打敢拼，人穷不能志短 一杯敬故乡， 一杯敬远方，守着我的善良，催着我成长，所以南北的路从此不再漫长，灵魂不再无处安放 青年时期，家乡变成了故乡，亲人也只放在心底，难得见到一次，走南闯北，来来回回，成了常态。不变的是那一颗童心，小心翼翼的保存着，不让任何东西玷污，那是自己最后一片净土。这里保存着自己最独特的地方，不为物质权利所打动，只是单纯快乐。 一杯敬明天 一杯敬过往 支撑我的身体 厚重了肩膀，虽然从不相信所谓山高水长 人生苦短何必念念不忘 人到中年，世界观价值观已成型，不会轻易改动，明白了一些道理，知道了童话就是童话，快乐是暂时的，痛苦也不会持续太久，取决于自己的内心世界，也受外界情况影响。没有什么是持久的，所有得到的不过是暂时拥有，重要的是当时的体验，以及对后来的影响。 一杯敬自由 一杯敬死亡 宽恕我的平凡 驱散了迷惘 好吧天亮之后总是潦草离场 清醒的人最荒唐 到了人生的最后阶段，死亡渐进，自由永恒。回首往事，发现自己竟然经历了这么多，还有这么多事没有做呀，但是没有时间了，如果能健健康康的再活十几年该有多好。做了近百年的梦，终于该醒了。。。醒了之后又会是怎样一副场景呢]]></content>
      <categories>
        <category>感悟</category>
      </categories>
      <tags>
        <tag>杂想</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客搭建历程]]></title>
    <url>%2Fpost%2F88b59cc8.html</url>
    <content type="text"><![CDATA[说在前面 其实早上就有搭建博客的想法，看到别人的博客搭的既简洁有炫酷，然后在博客里分享各种技术上的经验或是生活感悟，很是羡慕，不喜欢其他网站提供的现成模板，喜欢自由，喜欢折腾，就想着自己有时间一定要做一个出来。然而一是一直在忙于各种杂事，没时间做；二是因为懒（这是主要原因）闲的时候不想做，就一拖再拖，直到这段时间稍微闲了一点有了自己的时间，终于可以折腾自己的博客了。 我用了多久搭建自己的博客对着别人五分钟建站，愣是用了我三四天的时间才弄出来，整个过程一波三折，下面记录整个搭建过程。一是自己留一个备份，二是给有机会看到这篇博客的人少走一些弯路。 搭建平台系统：windows10 64位控制台：cmder，githexo+Github 搭建过程整个博客是搭建在github上的，后台用的是hexo，主题是简洁大方的next，域名用的是阿里云的top域名（谁让它便宜呢，一年才一块钱），阅读次数统计用的是leancloud，还有很多功能有待加入。。。不要着急 一、 注册github账户其实这个博客是托管在github上的，作为全球最大的大型同性交友平台，github提供免费的代码托管服务，为了更好的展示项目，github提供了一个github pages用来展示静态的网页，所谓搭建博客，其实借用的就是这个功能。首先注册、登录github.com,记住自己的Username。然后新建一个仓库，仓库的名字和自己Username一直（这个很重要）例如我的域名是Github.com/wangjie1945, 就填入wangjie1945.github.io 二、环境安装1、安装 Node.js2、安装Git for windows。Git教程推荐看廖雪峰老师的，安装完成后在开始菜单里找到Git-&gt;Git Bash,输入自己github的邮箱和用户名。3、安装Hexo$npm install -g hexo - cli如果一切顺利，环境我们就配置好了。 三、设置1、在自己的目录下建立一个目录，命名为blog2、在blog文件夹右击，选择Git Bush Here，输入 hexo init blog 等一下就会有成功提示。 3、执行hexo g命令，生成必要文件4、执行hexo s，启动服务器。5、访问·127.0.0.1/4000,就可以看到网站的初步模样。 四、上传到github在git里加入SSH key，直接连接到github，然后输入hexo d提交给远程仓库。 五、配置博客下载next主题，复制到theme文件夹，启动主题。接下就是对主题的各种折腾，配置各种插件，一个坑接着一个坑 总结这是真正意义上的第一篇技术博客，感觉静下心来写博客真心不容易，对那些写的通俗易懂教程的人崇拜之情又增加了几分，有时间再补一个关于主题的设置吧]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>技术总结,原创,2017</tag>
      </tags>
  </entry>
</search>
